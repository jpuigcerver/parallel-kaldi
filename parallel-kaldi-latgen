#!/bin/bash
set -e;
export LC_NUMERIC=C;

### Script directory.
SDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )";
### Load useful functions.
. "${SDIR}/parallel-kaldi-functions.inc.sh" || ( \
    echo "ERROR: Sourcing file \"${SDIR}/parallel-kaldi-functions.inc.sh\"">&2 \
    && exit 1);

# Options for gmm-latgen-faster-parallel
acoustic_scale=1.0;
allow_partial=false;
beam=1000;
beam_delta=0.5;
delta=0.000976562;
determinize_lattice=true;
hash_ratio=2;
lattice_beam=10;
log_sum_exp_prune=0;
max_active=2147483647;
max_mem=50000000;
min_active=200;
minimize=false;
num_threads=1;
phone_determinize=true;
prune_interval=25;
word_determinize=true;
word_symbol_table="";
write_best_words=false;
write_best_align=false;
# QSub options
qsub=false;
qsub_opts="-l h_rt=24:00:00,h_vmem=4G";
# Generic options
overwrite=false;
help_message="
Usage: parallel-kaldi-latgen [options] mdl fst fea1 [fea2 ...] work_dir

Description:
   Generate lattices from a GMM-based model and a decoding FST. Optionally,
   the 1-best word decoding and alignment can also be obtained.

   The input decoding FST and the features are interpreted as rxspecifiers
   (see Kaldi documentation).

   e.g: parallel-kaldi-latgen mdl hclg.fst ark:test.fea wdir

Options:
  --acoustic_scale             : (float, default = $acoustic_scale)
                                 Scaling factor for acoustic likelihoods.
  --allow_partial              : (boolean, default = $allow_partial)
                                 If true, produce output even if end state was
                                 not reached.
  --beam                       : (float, default = $beam)
                                 Decoding beam.
  --beam_delta                 : (float, default = $beam_delta)
                                 Increment used in decoding. Larger is more
                                 accurate (this parameter is obscure and relates
                                 to a speedup in the way the max-active
                                 constraint is applied).
  --config                     : (string, default = \"\")
                                 Read options from this config file. Multiple
                                 config files can be specified.
  --delta                      : (float, default = $delta)
                                 Tolerance used in determinization.
  --determinize_lattice        : (boolean, default = $determinize_lattice)
                                 If true, determinize the lattice (in a special
                                 sense, keeping only best pdf-sequence for each
                                 word-sequence).
  --hash_ratio                 : (float, default = $hash_ratio)
                                 Setting used in decoder to control hash
                                 behavior.
  --lattice_beam               : (float, default = $lattice_beam)
                                 Lattice generation beam.
  --log_sum_exp_prune          : (float, default = $log_sum_exp_prune)
                                 If >0, pruning parameter to minimize exp()'s.
                                 Suggest 3 to 5; larger is more exact.
  --max_active                 : (integer, default = $max_active)
                                 Decoder maximum number of active states.
  --max_mem                    : (integer, default = $max_mem)
                                 Maximum approximate memory usage in
                                 determinization (real usage might be many times
                                 this).
  --min_active                 : (integer, default = $min_active)
                                 Decoder minimum number of active states.
  --minimize                   : (boolean, default = $minimize)
                                 If true, push and minimize after
                                 determinization.
  --num_threads                : (integer, default = $num_threads)
                                 Number of actively processing threads to run
                                 in parallel.
  --overwrite                  : (boolean, default = $overwrite)
                                 If true, overwrite previously created files.
  --phone_determinize          : (boolean, default = $phone_determinize)
                                 If true, do an initial pass of determinization
                                 on both phones and words.
  --prune_interval             : (integer, default = $prune_interval)
                                 Interval (in frames) at which to prune tokens.
  --qsub                       : (boolean, default = $qsub)
                                 If true, run jobs in a cluster using qsub
                                 instead of the local machine.
  --qsub_opts                  : (string, default = \"$qsub_opts\")
                                 Options passed to the qsub command. Note:
                                 -cwd, -p mp, and -t are automatically set.
  --word_determinize           : (boolean, default = $word_determinize)
                                 If true, do a second pass of determinization on
                                 words only (see also --phone_determinize).
  --word_symbol_table          : (string, default = \"$word_symbol_table\")
                                 Symbol table for words (for debug output).
  --write_best_align           : (boolean, default = $write_best_align)
                                 If true, writes an ARK file with the 1-best
                                 alignment hypothesis in the output directory.
  --write_best_words           : (boolean, default = $write_best_words)
                                 If true, writes an ARK file with the 1-best
                                 word sequence hypothesis in the output
                                 directory.
";
. "${SDIR}/parallel-kaldi-cmd-parse.inc.sh" || \
    error "Sourcing file \"${SDIR}/parallel-kaldi-cmd-parse.inc.sh\"";
[ $# -eq 0 ] && echo "$help_message" >&2 && exit 1;
[ $# -lt 4 ] && error "Wrong number of arguments. Check the usage with --help";

mdl="$1";
fst="$2";
shift 2;
feas=();
while [ $# -gt 1 ]; do feas+=("$1"); shift; done;
wdir="$1";

check_execs parallel-kaldi-latgen-local parallel-kaldi-latgen-qsub;

if [ "$qsub" = true ]; then
    parallel-kaldi-latgen-qsub \
        --acoustic_scale "$acoustic_scale" --allow_partial "$allow_partial" \
        --beam "$beam" --beam_delta "$beam_delta" --delta "$delta" \
        --determinize_lattice "$determinize_lattice" \
        --hash_ratio "$hash_ratio" --lattice_beam "$lattice_beam" \
        --log_sum_exp_prune "$log_sum_exp_prune" --max_active "$max_active" \
        --max_mem "$max_mem" --min_active "$min_active" \
        --minimize "$minimize" --overwrite "$overwrite" \
        --phone_determinize "$phone_determinize" \
        --prune_interval "$prune_interval" --qsub_opts "$qsub_opts" \
        --word_determinize "$word_determinize" \
        --word_symbol_table "$word_symbol_table" \
        --write_best_align "$write_best_align" \
        --write_best_words "$write_best_words" \
        "$mdl" "$fst" "${feas[@]}" "$wdir" || exit 1;
else
    parallel-kaldi-latgen-local \
        --acoustic_scale "$acoustic_scale" --allow_partial "$allow_partial" \
        --beam "$beam" --beam_delta "$beam_delta" --delta "$delta" \
        --determinize_lattice "$determinize_lattice" \
        --hash_ratio "$hash_ratio" --lattice_beam "$lattice_beam" \
        --log_sum_exp_prune "$log_sum_exp_prune" --max_active "$max_active" \
        --max_mem "$max_mem" --min_active "$min_active" \
        --minimize "$minimize" --overwrite "$overwrite" \
        --phone_determinize "$phone_determinize" \
        --prune_interval "$prune_interval" \
        --word_determinize "$word_determinize" \
        --word_symbol_table "$word_symbol_table" \
        --write_best_align "$write_best_align" \
        --write_best_words "$write_best_words" \
        "$mdl" "$fst" "${feas[@]}" "$wdir" || exit 1;
fi;

exit 0;
