#!/bin/bash
set -e;
export LC_NUMERIC=C;

### Script directory.
SDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )";
### Load useful functions.
. "${SDIR}/parallel-kaldi-functions.inc.sh" || ( \
    echo "ERROR: Sourcing file \"${SDIR}/parallel-kaldi-functions.inc.sh\"">&2 \
    && exit 1);

# lattice-scale options
acoustic_scale=1;
acoustic2lm_scale=0;
inv_acoustic_scale=1;
lm_scale=1;
lm2acoustic_scale=0;
# lattice-add-penalty options
word_insertion_penalty=0;
# Generic options
overwrite=false;
help_message="
Usage: parallel-kaldi-lat-scale-local [options] lat1 [lat2 ...] work_dir

Description:
   Scale the acoustic and graph scores in a set of lattices and add a word
   insertion penalty.

   In order to scale similar parameters to HTK's grammar scale factor and
   word insertion penalty, use the options --inv_acoustic_scale and
   --word_insertion_penalty respectively. Notice, however, that the LM scaling
   is not 100% equivalent to HTK's.

   The input lattice strings are rxspecifiers (see Kaldi's documentation).
   As many processes as input lattices will be launched in parallel. The
   program will hang until all processes are done.

   The scaled version of the lattices will be written to the work directory
   into new ARK files, named lattice.0.ark, lattice.1.ark, etc.

   e.g: parallel-kaldi-lat-scale-local ark:lat1.ark ark:lat2.ark wdir

Options:
  --acoustic_scale             : (float, default = $acoustic_scale)
                                 Scaling factor for acoustic likelihoods.
  --acoustic2lm_scale          : (float, default = $acoustic2lm_scale)
                                 Add this times original acoustic costs to LM
                                 costs.
  --inv_acoustic_scale         : (float, default = $inv_acoustic_scale)
                                 An alternative way of setting the acoustic
                                 scale: you can set its inverse. Use this as a
                                 replacement of HTK's grammar scale factor.
  --lm_scale                   : (float, default = $lm_scale)
                                 Scaling factor for graph/lm costs.
  --lm2acoustic_scale          : (float, default = $lm2acoustic_scale)
                                 Add this times original LM costs to acoustic
                                 costs.
  --overwrite                  : (boolean, default = $overwrite)
                                 If true, overwrite previously created files.
  --word_insertion_penalty     : (float, default = $word_insertion_penalty)
                                 Word insertion penalty. Word means the symbols
                                 of the output alphabet in the lattice. This is
                                 equivalent to HTK's word insertion penalty.
";
. "${SDIR}/parallel-kaldi-cmd-parse.inc.sh" || \
    error "Sourcing file \"${SDIR}/parallel-kaldi-cmd-parse.inc.sh\"";
[ $# -eq 0 ] && echo "$help_message" >&2 && exit 1;
[ $# -lt 2 ] && error "Wrong number of arguments. Check the usage with --help";
lats=();
while [ $# -gt 1 ]; do lats+=("$1"); shift; done;
wdir="$1";

make_dirs "$wdir";

bg_jobs=();
for i in $(seq 1 ${#lats[@]}); do
    [ "$overwrite" = false -a -s "$wdir/lattice.$[i-1].ark" ] && continue;
    ( lattice-scale --acoustic-scale="$acoustic_scale" \
        --acoustic2lm-scale="$acoustic2lm_scale" \
        --inv-acoustic-scale="$inv_acoustic_scale" \
        --lm-scale="$lm_scale" \
        --lm2acoustic_scale="$lm2acoustic_scale" \
        "${lats[i-1]}" ark:- | \
        lattice-add-penalty --word-ins-penalty="$word_insertion_penalty" \
        ark:- "ark:$wdir/lattice.$[i-1].ark" ) \
        &> "$wdir/lattice-scale.$[i-1].log" &
    bg_jobs+=("$!");
done;

# Wait for all processes running in the background.
any_failure=0;
for i in $(seq 1 ${#lats[@]}); do
    log="${wdir}/lattice-scale.$[i-1].log";
    wait ${bg_jobs[i-1]} || ( \
	error_continue "Worker scaling lattice failed, see \"$log\"" && \
	any_failure=1 );
done;
[ $any_failure -eq 0 ] || exit 1;
exit 0;